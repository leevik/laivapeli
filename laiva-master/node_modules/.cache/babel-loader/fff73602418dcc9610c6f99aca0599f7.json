{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Leevi\\\\Desktop\\\\laivanasdasdasdasdad\\\\laiva-master\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'; //import {dropResult} from './components/Laiva';\n//Luodaan client-puolen soketti\n\nconst io = require(\"socket.io-client\");\n\nconst socket = io();\nvar soketit = {\n  pelaaja1: {\n    socket: null,\n    taulu: null\n  },\n  pelaaja2: {\n    socket: null,\n    taulu: null\n  }\n};\n/* let laivaData =  dropResult.split(\".\");\r\nlaivaData = soketit.pelaaja1.taulu[parseInt(res[0])][parseInt([res[1]])] == 1 */\n\nsoketit.pelaaja1.taulu = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 2, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 2, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]];\nsoketit.pelaaja2.taulu = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]];\nsocket.on(\"mihinAmmuttu\", data => {\n  //data = String(data)\n  if (socket == soketit.pelaaja1.socket) {\n    //var taulu1 = soketit.pelaaja1.taulu\n    var res = data.split(\".\");\n\n    if (soketit.pelaaja1.taulu[parseInt(res[0])][parseInt([res[1]])] == 2) {\n      socket.emit(\"\");\n    }\n\n    soketit.pelaaja1.taulu[parseInt(res[0])][parseInt([res[1]])] = 1; //soketit.pelaaja1.taulu = taulu1\n\n    console.log(soketit.pelaaja1.taulu);\n  } else if (socket == soketit.pelaaja2.socket) {\n    //var taulu2 = soketit.pelaaja2.taulu\n    var res = data.split(\".\");\n    soketit.pelaaja2.taulu[parseInt(res[0])][parseInt([res[1]])] = 1; //soketit.pelaaja2.taulu = taulu2\n\n    console.log(soketit.pelaaja2.taulu);\n  }\n});\nsocket.on(\"viesti\", viesti => {\n  console.log(viesti);\n});\nsocket.on(\"pelaajaID\", data => {\n  if (data == 1) {\n    soketit.pelaaja1.socket = socket;\n  } else if (data == 2) {\n    soketit.pelaaja2.socket = socket;\n  }\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 77,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals(); //Exportataan soketti, jotta sit채 voidaan k채ytt채채 muissa tiedostoissa. 25.11\n\nexport default socket;","map":{"version":3,"sources":["C:/Users/Leevi/Desktop/laivanasdasdasdasdad/laiva-master/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","io","require","socket","soketit","pelaaja1","taulu","pelaaja2","on","data","res","split","parseInt","emit","console","log","viesti","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n//import {dropResult} from './components/Laiva';\r\n//Luodaan client-puolen soketti\r\nconst io = require(\"socket.io-client\");\r\nconst socket = io()\r\n\r\nvar soketit = {pelaaja1: {socket: null, taulu: null}, pelaaja2:{socket: null, taulu: null}}\r\n\r\n/* let laivaData =  dropResult.split(\".\");\r\nlaivaData = soketit.pelaaja1.taulu[parseInt(res[0])][parseInt([res[1]])] == 1 */\r\n\r\nsoketit.pelaaja1.taulu = [[0,0,0,0,0,0,0,0,0,0],\r\n                          [0,0,0,0,0,0,0,0,0,0],\r\n                          [0,0,0,0,0,0,0,0,0,0],\r\n                          [0,0,0,2,2,2,2,0,0,0],\r\n                          [0,0,0,0,0,0,0,0,0,0],\r\n                          [0,0,0,2,2,2,2,0,0,0],\r\n                          [0,0,0,0,0,0,0,0,0,0],\r\n                          [0,0,0,0,0,0,0,0,0,0],\r\n                          [0,0,0,0,0,0,0,0,0,0],\r\n                          [0,0,0,0,0,0,0,0,0,0]\r\n                         ]\r\nsoketit.pelaaja2.taulu = [[0,0,0,0,0,0,0,0,0,0],\r\n                          [0,0,0,0,0,0,0,0,0,0],\r\n                          [0,0,0,2,0,0,0,0,0,0],\r\n                          [0,0,0,2,0,0,0,0,0,0],\r\n                          [0,0,0,2,0,0,0,0,0,0],\r\n                          [0,0,0,2,0,0,0,0,0,0],\r\n                          [0,0,0,0,0,0,0,0,0,0],\r\n                          [0,0,0,0,0,0,0,0,0,0],\r\n                          [0,0,0,0,0,0,0,0,0,0],\r\n                          [0,0,0,0,0,0,0,0,0,0]\r\n                         ]\r\n\r\nsocket.on(\"mihinAmmuttu\", data => {\r\n  //data = String(data)\r\n  if(socket == soketit.pelaaja1.socket){\r\n    //var taulu1 = soketit.pelaaja1.taulu\r\n    var res = data.split(\".\");\r\n    if(soketit.pelaaja1.taulu[parseInt(res[0])][parseInt([res[1]])] == 2)\r\n    {\r\n      socket.emit(\"\")\r\n    }\r\n    soketit.pelaaja1.taulu[parseInt(res[0])][parseInt([res[1]])] = 1\r\n    //soketit.pelaaja1.taulu = taulu1\r\n    console.log(soketit.pelaaja1.taulu)\r\n  }\r\n  else if(socket == soketit.pelaaja2.socket){\r\n    //var taulu2 = soketit.pelaaja2.taulu\r\n    var res = data.split(\".\");\r\n    soketit.pelaaja2.taulu[parseInt(res[0])][parseInt([res[1]])] = 1\r\n    //soketit.pelaaja2.taulu = taulu2\r\n    console.log(soketit.pelaaja2.taulu)\r\n  }\r\n});\r\n\r\nsocket.on(\"viesti\", viesti=>{\r\n  console.log(viesti)\r\n});\r\n\r\nsocket.on(\"pelaajaID\", data =>{\r\n  if(data == 1){\r\n    soketit.pelaaja1.socket = socket\r\n  }\r\n  else if (data == 2){\r\n    soketit.pelaaja2.socket = socket\r\n  }\r\n});\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n//Exportataan soketti, jotta sit채 voidaan k채ytt채채 muissa tiedostoissa. 25.11\r\nexport default socket;"]},"metadata":{},"sourceType":"module"}