{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Leevi\\\\Desktop\\\\laivanasdasdasdasdad\\\\laiva-master\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\"; //Redux importit\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { player1Hit, player1Shot, player2Hit, player2Shot } from \"./redux/actions/playerBoardActions\";\nimport { toggleTurn } from \"./redux/actions/gameActions\"; // import { useSelector, useDispatch } from \"react-redux\";\n// import { toggleTurn } from \"../redux/actions/gameActions\";\n\n/**\n * Tiedostot, joihin tein muutoksia [Teemu Pirskanen, Redux, 3.12]: index.js, server.js, Layout.js, OpponentField.js\n */\n//Luodaan client-puolen soketti\n\nconst io = require(\"socket.io-client\");\n\nconst socket = io();\nvar soketit = {\n  pelaaja1: {\n    socket: null,\n    taulu: null\n  },\n  pelaaja2: {\n    socket: null,\n    taulu: null\n  }\n};\nsoketit.pelaaja1.taulu = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]];\nsoketit.pelaaja2.taulu = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]; // socket.on(\"mihinAmmuttu\", (data) => {\n//   //data = String(data)\n//   if (socket === soketit.pelaaja1.socket) {\n//     //var taulu1 = soketit.pelaaja1.taulu\n//     var res = data.split(\".\");\n//     soketit.pelaaja1.taulu[parseInt(res[0])][parseInt([res[1]])] = 1;\n//     store.dispatch(player1Shot(res));\n//   } else if (socket === soketit.pelaaja2.socket) {\n//     //var taulu2 = soketit.pelaaja2.taulu\n//     var res = data.split(\".\");\n//     soketit.pelaaja2.taulu[parseInt(res[0])][parseInt([res[1]])] = 1;\n//     store.dispatch(player2Shot(res));\n//   }\n// });\n\n/**\n * TODO:\n * mihin ammuttu tarkastus, oikeat merkinnät reduxiin. - OK\n * Osututulle laivalle merkintä reduxiin - OK\n * Jokin tapa selvittää mihin laivaan osuttiin.\n */\n// 0 = vettä, 1 = osuma veteen, 2 = laiva, 3 = osuma laivaan\n\nsocket.on(\"mihinAmmuttu\", data => {\n  //PELAAJA 1 server emitoi, että pelaaja 2 ampui pelaaja 1:stä\n  if (socket === soketit.pelaaja1.socket) {\n    var res = data.split(\".\"); //LAIVAT ON TÄHÄN MENNESSÄ ASETELTU VASTAAVASTI KUMMANKIN PELAAJAN OMAAN TAULUUN //TOISTAISEKSI KOVAKOODATTU REDUCERIIN.\n    //Tarkastetaan onko ammutussa kohdassa 2, eli laiva\n\n    if (store.getState().playerboard.pelaaja1taulu[parseInt(res[0])][parseInt([res[1]])] === 2) {\n      //OSUMA PÄIVITYS\n      socket.emit(\"osuma\", data);\n      store.dispatch(player1Hit(res));\n    } else {\n      //HUTI PÄIVITYS\n      store.dispatch(player1Shot(res));\n    }\n  } //PELAAJA 2 server emitoi, että pelaaja 1 ampui pelaaja 2:stä\n  else if (socket === soketit.pelaaja2.socket) {\n      var res = data.split(\".\"); //Tarkastetaan onko ammutussa kohdassa 2, eli laiva //Tämä on todennäköisesti aika huono tapa selvittää tila storesta, mutta muuta tapaa en keksi, jota hyödyntää index.jssä\n\n      if (store.getState().playerboard.pelaaja2taulu[parseInt(res[0])][parseInt([res[1]])] === 2) {\n        socket.emit(\"osuma\", data); //OSUMA PÄIVITYS\n\n        store.dispatch(player2Hit(res));\n      } else {\n        //HUTI PÄIVITYS\n        store.dispatch(player2Shot(res));\n      }\n    }\n}); //Vaihtaa vuoron kutsuttaessa. Toistaiseksi sitä kutsutaan ehtojen täytyttyä serverin puolelta kahdesti, kerran kummallekkin pelaajalle.\n\nsocket.on(\"vuoronvaihto\", () => {\n  store.dispatch(toggleTurn());\n});\nsocket.on(\"viesti\", viesti => {\n  console.log(viesti);\n});\nsocket.on(\"pelaajaID\", data => {\n  if (data === 1) {\n    soketit.pelaaja1.socket = socket;\n  } else if (data === 2) {\n    soketit.pelaaja2.socket = socket;\n  }\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 137,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals(); //Exportataan soketti, jotta sitä voidaan käyttää muissa tiedostoissa. 25.11\n\nexport default socket;","map":{"version":3,"sources":["C:/Users/Leevi/Desktop/laivanasdasdasdasdad/laiva-master/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","Provider","store","player1Hit","player1Shot","player2Hit","player2Shot","toggleTurn","io","require","socket","soketit","pelaaja1","taulu","pelaaja2","on","data","res","split","getState","playerboard","pelaaja1taulu","parseInt","emit","dispatch","pelaaja2taulu","viesti","console","log","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n//Redux importit\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport {\n  player1Hit,\n  player1Shot,\n  player2Hit,\n  player2Shot,\n} from \"./redux/actions/playerBoardActions\";\nimport { toggleTurn } from \"./redux/actions/gameActions\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { toggleTurn } from \"../redux/actions/gameActions\";\n\n/**\n * Tiedostot, joihin tein muutoksia [Teemu Pirskanen, Redux, 3.12]: index.js, server.js, Layout.js, OpponentField.js\n */\n\n//Luodaan client-puolen soketti\nconst io = require(\"socket.io-client\");\nconst socket = io();\n\nvar soketit = {\n  pelaaja1: { socket: null, taulu: null },\n  pelaaja2: { socket: null, taulu: null },\n};\n\nsoketit.pelaaja1.taulu = [\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n];\nsoketit.pelaaja2.taulu = [\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n];\n\n// socket.on(\"mihinAmmuttu\", (data) => {\n//   //data = String(data)\n//   if (socket === soketit.pelaaja1.socket) {\n//     //var taulu1 = soketit.pelaaja1.taulu\n//     var res = data.split(\".\");\n//     soketit.pelaaja1.taulu[parseInt(res[0])][parseInt([res[1]])] = 1;\n//     store.dispatch(player1Shot(res));\n//   } else if (socket === soketit.pelaaja2.socket) {\n//     //var taulu2 = soketit.pelaaja2.taulu\n//     var res = data.split(\".\");\n//     soketit.pelaaja2.taulu[parseInt(res[0])][parseInt([res[1]])] = 1;\n//     store.dispatch(player2Shot(res));\n//   }\n// });\n\n/**\n * TODO:\n * mihin ammuttu tarkastus, oikeat merkinnät reduxiin. - OK\n * Osututulle laivalle merkintä reduxiin - OK\n * Jokin tapa selvittää mihin laivaan osuttiin.\n */\n\n// 0 = vettä, 1 = osuma veteen, 2 = laiva, 3 = osuma laivaan\nsocket.on(\"mihinAmmuttu\", (data) => {\n  //PELAAJA 1 server emitoi, että pelaaja 2 ampui pelaaja 1:stä\n  if (socket === soketit.pelaaja1.socket) {\n    var res = data.split(\".\");\n    //LAIVAT ON TÄHÄN MENNESSÄ ASETELTU VASTAAVASTI KUMMANKIN PELAAJAN OMAAN TAULUUN //TOISTAISEKSI KOVAKOODATTU REDUCERIIN.\n    //Tarkastetaan onko ammutussa kohdassa 2, eli laiva\n    if (\n      store.getState().playerboard.pelaaja1taulu[parseInt(res[0])][\n        parseInt([res[1]])\n      ] === 2\n    ) {\n      //OSUMA PÄIVITYS\n      socket.emit(\"osuma\", data);\n      store.dispatch(player1Hit(res));\n    } else {\n      //HUTI PÄIVITYS\n      store.dispatch(player1Shot(res));\n    }\n  }\n  //PELAAJA 2 server emitoi, että pelaaja 1 ampui pelaaja 2:stä\n  else if (socket === soketit.pelaaja2.socket) {\n    var res = data.split(\".\");\n\n    //Tarkastetaan onko ammutussa kohdassa 2, eli laiva //Tämä on todennäköisesti aika huono tapa selvittää tila storesta, mutta muuta tapaa en keksi, jota hyödyntää index.jssä\n    if (\n      store.getState().playerboard.pelaaja2taulu[parseInt(res[0])][\n        parseInt([res[1]])\n      ] === 2\n    ) {\n      socket.emit(\"osuma\", data);\n      //OSUMA PÄIVITYS\n      store.dispatch(player2Hit(res));\n    } else {\n      //HUTI PÄIVITYS\n      store.dispatch(player2Shot(res));\n    }\n  }\n});\n\n//Vaihtaa vuoron kutsuttaessa. Toistaiseksi sitä kutsutaan ehtojen täytyttyä serverin puolelta kahdesti, kerran kummallekkin pelaajalle.\nsocket.on(\"vuoronvaihto\", () => {\n  store.dispatch(toggleTurn());\n});\n\nsocket.on(\"viesti\", (viesti) => {\n  console.log(viesti);\n});\n\nsocket.on(\"pelaajaID\", (data) => {\n  if (data === 1) {\n    soketit.pelaaja1.socket = socket;\n  } else if (data === 2) {\n    soketit.pelaaja2.socket = socket;\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//Exportataan soketti, jotta sitä voidaan käyttää muissa tiedostoissa. 25.11\nexport default socket;\n"]},"metadata":{},"sourceType":"module"}