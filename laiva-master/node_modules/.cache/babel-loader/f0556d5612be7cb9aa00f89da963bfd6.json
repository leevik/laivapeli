{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Leevi\\\\Desktop\\\\laivanasdasdasdasdad\\\\laiva-master\\\\src\\\\components\\\\Tuhoaja.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { DragPreviewImage, useDrag } from 'react-dnd';\nimport { shipTypes } from './shipTypes';\nimport tuhoajaKuva from \"./tuhoajaKuva.png\";\nconst tuhoajaStyle = {\n  fontSize: 40,\n  fontWeight: 'bold',\n  cursor: 'move'\n};\nexport const Tuhoaja = () => {\n  _s();\n\n  const [{\n    isDragging\n  }, drag, preview] = useDrag({\n    item: {\n      type: shipTypes.Tuhoaja\n    },\n    end: (item, monitor) => {\n      // monitor.getDropResult(); //https://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor - getDropResult()\n      const dropResult = monitor.getDropResult();\n      console.log(dropResult);\n      /** If it was handled, and the drop target specified a \r\n       * drop result by returning a plain object from its drop() method, it will be available\r\n       *  as monitor.getDropResult().  */\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DragPreviewImage, {\n      connect: preview,\n      src: tuhoajaKuva\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: drag,\n      style: { ...tuhoajaStyle,\n        opacity: isDragging ? 0.5 : 1\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: tuhoajaKuva,\n        height: \"100px\",\n        width: \"125px\",\n        alt: \"tuhoajaKuva\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Tuhoaja, \"Og+i5xY5dqkHICnRyQGxJNpLzFE=\", false, function () {\n  return [useDrag];\n});\n\n_c = Tuhoaja;\nexport default Tuhoaja;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tuhoaja\");","map":{"version":3,"sources":["C:/Users/Leevi/Desktop/laivanasdasdasdasdad/laiva-master/src/components/Tuhoaja.jsx"],"names":["React","DragPreviewImage","useDrag","shipTypes","tuhoajaKuva","tuhoajaStyle","fontSize","fontWeight","cursor","Tuhoaja","isDragging","drag","preview","item","type","end","monitor","dropResult","getDropResult","console","log","collect","opacity"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,OAA3B,QAA0C,WAA1C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAQC,WAAR,MAAyB,mBAAzB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,UAAU,EAAE,MAFK;AAGjBC,EAAAA,MAAM,EAAE;AAHS,CAArB;AAKA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAiBC,IAAjB,EAAuBC,OAAvB,IAAkCV,OAAO,CAAC;AAC5CW,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAEX,SAAS,CAACM;AAAlB,KADsC;AAE5CM,IAAAA,GAAG,EAAE,CAACF,IAAD,EAAOG,OAAP,KAAmB;AACpB;AAEA,YAAMC,UAAU,GAAGD,OAAO,CAACE,aAAR,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA;AACZ;AACA;AAES,KAX2C;AAa5CI,IAAAA,OAAO,EAAGL,OAAD,KAAc;AACnBN,MAAAA,UAAU,EAAE,CAAC,CAACM,OAAO,CAACN,UAAR;AADK,KAAd;AAbmC,GAAD,CAA/C;AAiBA,sBAAQ;AAAA,4BACT,QAAC,gBAAD;AAAkB,MAAA,OAAO,EAAEE,OAA3B;AAAoC,MAAA,GAAG,EAAER;AAAzC;AAAA;AAAA;AAAA;AAAA,YADS,eAET;AAAK,MAAA,GAAG,EAAEO,IAAV;AAAgB,MAAA,KAAK,EAAE,EAClB,GAAGN,YADe;AAElBiB,QAAAA,OAAO,EAAEZ,UAAU,GAAG,GAAH,GAAS;AAFV,OAAvB;AAAA,6BAIC;AAAK,QAAA,GAAG,EAAEN,WAAV;AAAuB,QAAA,MAAM,EAAC,OAA9B;AAAsC,QAAA,KAAK,EAAC,OAA5C;AAAoD,QAAA,GAAG,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA;AAJD;AAAA;AAAA;AAAA;AAAA,YAFS;AAAA,kBAAR;AASH,CA3BM;;GAAMK,O;UAC+BP,O;;;KAD/BO,O;AA4Bb,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport { DragPreviewImage, useDrag } from 'react-dnd';\r\nimport { shipTypes } from './shipTypes';\r\nimport  tuhoajaKuva from \"./tuhoajaKuva.png\"\r\n\r\nconst tuhoajaStyle = {\r\n    fontSize: 40,\r\n    fontWeight: 'bold',\r\n    cursor: 'move',\r\n};\r\nexport const Tuhoaja = () => {\r\n    const [{ isDragging }, drag, preview] = useDrag({\r\n        item: { type: shipTypes.Tuhoaja },\r\n        end: (item, monitor) => {\r\n            // monitor.getDropResult(); //https://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor - getDropResult()\r\n         \r\n            const dropResult = monitor.getDropResult();\r\n            console.log(dropResult);\r\n            /** If it was handled, and the drop target specified a \r\n             * drop result by returning a plain object from its drop() method, it will be available\r\n             *  as monitor.getDropResult().  */\r\n         \r\n        },\r\n        \r\n        collect: (monitor) => ({\r\n            isDragging: !!monitor.isDragging(),\r\n        }),\r\n    });\r\n    return (<>\r\n\t\t\t<DragPreviewImage connect={preview} src={tuhoajaKuva}/>\r\n\t\t\t<div ref={drag} style={{\r\n        ...tuhoajaStyle,\r\n        opacity: isDragging ? 0.5 : 1,\r\n    }}>\r\n\t\t\t\t<img src={tuhoajaKuva} height=\"100px\" width=\"125px\" alt=\"tuhoajaKuva\"/>\r\n\t\t\t</div>\r\n\t\t</>);\r\n};\r\nexport default Tuhoaja;"]},"metadata":{},"sourceType":"module"}