{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Leevi\\\\Desktop\\\\laivanasdasdasdasdad\\\\laiva-master\\\\src\\\\components\\\\Sukellusvene.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { DragPreviewImage, useDrag } from 'react-dnd';\nimport { shipTypes } from './shipTypes';\nimport sukellusveneKuva from \"./sukellusveneKuva.png\";\nconst sukellusveneStyle = {\n  fontSize: 40,\n  fontWeight: 'bold',\n  cursor: 'move'\n};\nexport const Sukellusvene = () => {\n  _s();\n\n  const [{\n    isDragging\n  }, drag, preview] = useDrag({\n    item: {\n      type: \"tuhoaja\"\n    },\n    end: (item, monitor) => {\n      // monitor.getDropResult(); //https://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor - getDropResult()\n      const dropResult = monitor.getDropResult();\n      console.log(dropResult);\n      /** If it was handled, and the drop target specified a \r\n       * drop result by returning a plain object from its drop() method, it will be available\r\n       *  as monitor.getDropResult().  */\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DragPreviewImage, {\n      connect: preview,\n      src: sukellusveneKuva\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: drag,\n      style: { ...sukellusveneStyle,\n        opacity: isDragging ? 0.5 : 1\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: sukellusveneKuva,\n        height: \"100px\",\n        width: \"125px\",\n        alt: \"sukellusveneKuva\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Sukellusvene, \"Og+i5xY5dqkHICnRyQGxJNpLzFE=\", false, function () {\n  return [useDrag];\n});\n\n_c = Sukellusvene;\nexport default Sukellusvene;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sukellusvene\");","map":{"version":3,"sources":["C:/Users/Leevi/Desktop/laivanasdasdasdasdad/laiva-master/src/components/Sukellusvene.jsx"],"names":["React","DragPreviewImage","useDrag","shipTypes","sukellusveneKuva","sukellusveneStyle","fontSize","fontWeight","cursor","Sukellusvene","isDragging","drag","preview","item","type","end","monitor","dropResult","getDropResult","console","log","collect","opacity"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,OAA3B,QAA0C,WAA1C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAQC,gBAAR,MAA8B,wBAA9B;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,QAAQ,EAAE,EADY;AAEtBC,EAAAA,UAAU,EAAE,MAFU;AAGtBC,EAAAA,MAAM,EAAE;AAHc,CAA1B;AAKA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAiBC,IAAjB,EAAuBC,OAAvB,IAAkCV,OAAO,CAAC;AAC5CW,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADsC;AAE5CC,IAAAA,GAAG,EAAE,CAACF,IAAD,EAAOG,OAAP,KAAmB;AACpB;AAEA,YAAMC,UAAU,GAAGD,OAAO,CAACE,aAAR,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA;AACZ;AACA;AACS,KAV2C;AAW5CI,IAAAA,OAAO,EAAGL,OAAD,KAAc;AACnBN,MAAAA,UAAU,EAAE,CAAC,CAACM,OAAO,CAACN,UAAR;AADK,KAAd;AAXmC,GAAD,CAA/C;AAeA,sBAAQ;AAAA,4BACT,QAAC,gBAAD;AAAkB,MAAA,OAAO,EAAEE,OAA3B;AAAoC,MAAA,GAAG,EAAER;AAAzC;AAAA;AAAA;AAAA;AAAA,YADS,eAET;AAAK,MAAA,GAAG,EAAEO,IAAV;AAAgB,MAAA,KAAK,EAAE,EAClB,GAAGN,iBADe;AAElBiB,QAAAA,OAAO,EAAEZ,UAAU,GAAG,GAAH,GAAS;AAFV,OAAvB;AAAA,6BAIC;AAAK,QAAA,GAAG,EAAEN,gBAAV;AAA4B,QAAA,MAAM,EAAC,OAAnC;AAA2C,QAAA,KAAK,EAAC,OAAjD;AAAyD,QAAA,GAAG,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA;AAJD;AAAA;AAAA;AAAA;AAAA,YAFS;AAAA,kBAAR;AASH,CAzBM;;GAAMK,Y;UAC+BP,O;;;KAD/BO,Y;AA0Bb,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport { DragPreviewImage, useDrag } from 'react-dnd';\r\nimport { shipTypes } from './shipTypes';\r\nimport  sukellusveneKuva from \"./sukellusveneKuva.png\"\r\n\r\nconst sukellusveneStyle = {\r\n    fontSize: 40,\r\n    fontWeight: 'bold',\r\n    cursor: 'move',\r\n};\r\nexport const Sukellusvene = () => {\r\n    const [{ isDragging }, drag, preview] = useDrag({\r\n        item: { type: \"tuhoaja\" },\r\n        end: (item, monitor) => {\r\n            // monitor.getDropResult(); //https://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor - getDropResult()\r\n         \r\n            const dropResult = monitor.getDropResult();\r\n            console.log(dropResult);\r\n            /** If it was handled, and the drop target specified a \r\n             * drop result by returning a plain object from its drop() method, it will be available\r\n             *  as monitor.getDropResult().  */         \r\n        },        \r\n        collect: (monitor) => ({\r\n            isDragging: !!monitor.isDragging(),\r\n        }),\r\n    });\r\n    return (<>\r\n\t\t\t<DragPreviewImage connect={preview} src={sukellusveneKuva}/>\r\n\t\t\t<div ref={drag} style={{\r\n        ...sukellusveneStyle,\r\n        opacity: isDragging ? 0.5 : 1,\r\n    }}>\r\n\t\t\t\t<img src={sukellusveneKuva} height=\"100px\" width=\"125px\" alt=\"sukellusveneKuva\"/>\r\n\t\t\t</div>\r\n\t\t</>);\r\n};\r\nexport default Sukellusvene;"]},"metadata":{},"sourceType":"module"}